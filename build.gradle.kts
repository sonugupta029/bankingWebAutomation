/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 */

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin on the JVM
    id("org.jetbrains.kotlin.jvm").version("1.3.10")
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

object Version {
    val seleniumJava = "3.141.59"
    val log4j = "2.16.0"
    val testng = "6.14.3"
    val javaClient = "7.2.0"
    val extentReports = "3.0.7"
    val reportNG = "1.1.2"
    val guice = "3.0"
    val kotlinLib = "1.3.21"
    val openCSV = "3.7"
}

object Dependencies {
    val seleniumJava = "org.seleniumhq.selenium:selenium-java:${Version.seleniumJava}"
    val log4jApi = "org.apache.logging.log4j:log4j-api:${Version.log4j}"
    val log4j1Api = "org.apache.logging.log4j:log4j-core:${Version.log4j}"
    val testng = "org.testng:testng:${Version.testng}"
    val javaClient = "io.appium:java-client:${Version.javaClient}"
    val extentReports = "com.aventstack:extentreports:${Version.extentReports}"
    val reportNG = "org.uncommons:reportng:${Version.reportNG}"
    val guice = "com.google.inject:guice:${Version.guice}"
    val kotlinLib = "org.jetbrains.kotlin:kotlin-stdlib:${Version.kotlinLib}"
    val openCSV = "com.opencsv:opencsv:${Version.openCSV}"
}




dependencies {
    implementation(Dependencies.seleniumJava)
    implementation(Dependencies.testng)
    implementation(Dependencies.log4jApi)
    implementation(Dependencies.log4j1Api)
    implementation(Dependencies.extentReports)
    implementation(Dependencies.kotlinLib)
    implementation(Dependencies.openCSV)
    implementation(Dependencies.javaClient) {
        exclude(module = "selenium-java")
    }

    testImplementation(Dependencies.reportNG) {
        exclude(module = "testng")
    }
}



tasks.test {
    dependsOn("cleanTest")
    useTestNG() {
        useDefaultListeners = true
        val systemTestNgFile = System.getProperty("testngfile")
        println("System testNg file name : $systemTestNgFile")
        val suiteFiles: String? = systemTestNgFile ?: run {
            val projectTestNgFile: String? = "/src/test/resources/TestNG.xml"
            println("Project testNg file name : $projectTestNgFile")
            projectTestNgFile
        }
        println("Setting test suite files : $suiteFiles")
        suites(suiteFiles)
    }
}
